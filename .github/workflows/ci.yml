
name: E2E Test
on:
  schedule:
  # Hammer the backend by running this every 5mins ðŸ˜ˆ
    - cron: '*/5 * * * *'
  push:

jobs:
  check:
    # needs: only-doc-changes
    # if: needs.only-doc-changes.outputs.only-doc-changes == 'false'
    name: âœ… Check constraints, dependencies, and package.json's
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: yarn install
        working-directory: ./tasks/check

      - name: âœ… Check constraints, dependencies, and package.json's
        uses: ./tasks/check

  smoke-test:
    needs: check
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [14, 16]
      fail-fast: false
    name: ðŸ‘€ Smoke test / ${{ matrix.os }} / node ${{ matrix.node-version }} latest
    runs-on: ${{ matrix.os }}
    env:
      REDWOOD_CI: 1
      REDWOOD_VERBOSE_TELEMETRY: 1
      # This makes sure that playwright dependencies are cached in node_modules.
      PLAYWRIGHT_BROWSERS_PATH: 0
    steps:
      - uses: actions/checkout@v3
      - name: ðŸ§¶ Setup job
        uses: ./.github/actions/setup_job
        with:
          node-version: ${{ matrix.node-version }}

      - name: ðŸŒ² Setup test project
        id: setup_test_project
        uses: ./.github/actions/setup_test_project
        env:
          REDWOOD_DISABLE_TELEMETRY: 1
          YARN_ENABLE_IMMUTABLE_INSTALLS: false

      - name: ðŸŽ­ Install playwright dependencies
        run: npx playwright install --with-deps chromium

      - name: Run `rw build` without prerender
        run: |
          yarn rw build --no-prerender
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run `rw prerender`
        run: |
          yarn rw prerender --verbose
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run smoke tests on 'rw dev', 'rw serve', 'rw storybook'
        working-directory: ./tasks/smoke-test
        run: npx playwright test --project replay-chromium --reporter=@replayio/playwright/reporter,line
        env:
          PROJECT_PATH: ${{ steps.setup_test_project.outputs.test_project_path }}
          REDWOOD_DISABLE_TELEMETRY: 1
          RECORD_REPLAY_METADATA_TEST_RUN_TITLE: Smoke test / ${{ matrix.os }} / node ${{ matrix.node-version }} latest

      - name: Run `rw info`
        run: |
          yarn rw info
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run `rw lint`
        run: |
          yarn rw lint ./api/src --fix
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw test api"
        run: |
          yarn rw test api --no-watch
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw test web"
        run: |
          yarn rw test web --no-watch
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw check"
        run: |
          yarn rw check
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw storybook"
        run: |
          yarn rw sb --smoke-test
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw exec"
        run: |
          yarn rw g script testScript && yarn rw exec testScript
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "prisma generate"
        run: |
          yarn rw prisma generate
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw data-migrate"
        run: |
          yarn rw dataMigrate up
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "data-migrate install"
        run: |
          yarn rw data-migrate install
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "prisma migrate"
        run: |
          yarn rw prisma migrate dev --name ci-test
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run `rw deploy --help`
        run: yarn rw setup deploy --help && yarn rw deploy --help
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run `rw setup ui --help`
        run: yarn rw setup --help && yarn rw setup ui --help
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "g page"
        run: |
          yarn rw g page ciTest
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "g sdl"
        run: |
          yarn rw g sdl userExample
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Run "rw type-check"
        run: |
          yarn rw type-check
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}

      - name: Throw Error | Run `rw g sdl <model>`
        run: |
          yarn rw g sdl DoesNotExist
        working-directory: ${{ steps.setup_test_project.outputs.test_project_path }}
        continue-on-error: true
      - name: Upload Replays
        if: always()
        uses: replayio/action-upload@v0.4.3
        with:
          api-key: rwk_CtKeIb2wvaYrwIj4j5DEoTDjNrC1xJsL40OzkaXpuO0
